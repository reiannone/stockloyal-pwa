<?php
declare(strict_types=1);
require_once '/home/bitnami/stockloyal_bootstrap.php';
require_once __DIR__ . '/_loadenv.php';
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') { http_response_code(204); exit; }
// added above lines to support api.stockloyal.com for backend API access
// api/get_merchant.php
// Fetch full merchant record by merchant_id (PDO version)

header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json");

require_once "config.php"; // must define $conn as a PDO instance

try {
    // Read incoming JSON
    $input = json_decode(file_get_contents("php://input"), true);
    $merchantId = $input['merchant_id'] ?? '';

    if (!$merchantId) {
        echo json_encode([
            "success" => false,
            "error"   => "No merchant_id provided"
        ]);
        exit;
    }

    // Prepare query (PDO style)
    $stmt = $conn->prepare("SELECT * FROM merchant WHERE merchant_id = ? LIMIT 1");
    $stmt->execute([$merchantId]);
    $row = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($row) {
        // ğŸ”’ Normalize to integers (1/0 instead of true/false)
        foreach (['promotion_active', 'active_status'] as $col) {
            if (isset($row[$col])) {
                $row[$col] = (int)$row[$col];
            }
        }

        echo json_encode([
            "success"  => true,
            "merchant" => $row
        ], JSON_NUMERIC_CHECK); // âœ… ensures numeric values stay numbers
    } else {
        echo json_encode([
            "success" => false,
            "error"   => "Merchant not found"
        ]);
    }
} catch (Exception $e) {
    echo json_encode([
        "success" => false,
        "error"   => "Server error",
        "details" => $e->getMessage()
    ]);
}
